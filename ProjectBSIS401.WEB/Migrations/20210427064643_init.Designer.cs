// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectBSIS401.WEB.Infrastructures.Domain.Data;

namespace ProjectBSIS401.WEB.Migrations
{
    [DbContext(typeof(DefaultDbContext))]
    [Migration("20210427064643_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ProjectBSIS401.WEB.Infrastructures.Domain.Models.Booking", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AdditionalDescription");

                    b.Property<string>("Address");

                    b.Property<string>("ContactNumber");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<DateTime>("DateAndTime");

                    b.Property<int>("PaymentType");

                    b.Property<int>("ReserveStatus");

                    b.Property<Guid?>("ShopId");

                    b.Property<string>("ShopServiceDescription");

                    b.Property<Guid?>("ShopServiceId");

                    b.Property<string>("ShopServiceName");

                    b.Property<decimal>("ShopServicePrice");

                    b.Property<DateTime>("TimeStamps");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<Guid?>("UserId");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Booking");
                });

            modelBuilder.Entity("ProjectBSIS401.WEB.Infrastructures.Domain.Models.Chat", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("Name");

                    b.Property<int>("Type");

                    b.Property<DateTime>("UpdatedAt");

                    b.HasKey("Id");

                    b.ToTable("Chat");
                });

            modelBuilder.Entity("ProjectBSIS401.WEB.Infrastructures.Domain.Models.ChatUser", b =>
                {
                    b.Property<Guid?>("ChatId");

                    b.Property<Guid?>("UserId");

                    b.Property<int>("Role");

                    b.HasKey("ChatId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("ChatUser");
                });

            modelBuilder.Entity("ProjectBSIS401.WEB.Infrastructures.Domain.Models.Comment", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Content")
                        .HasMaxLength(500);

                    b.Property<DateTime>("CreatedAt");

                    b.Property<bool>("IsPublished");

                    b.Property<int>("Likes");

                    b.Property<bool>("LikesEnabled");

                    b.Property<bool>("MaskUser");

                    b.Property<Guid?>("ShopId")
                        .IsRequired();

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<Guid?>("UserId");

                    b.Property<string>("UserName")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("ShopId");

                    b.HasIndex("UserId");

                    b.ToTable("Comment");
                });

            modelBuilder.Entity("ProjectBSIS401.WEB.Infrastructures.Domain.Models.Contact", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("EmailAddress");

                    b.Property<string>("FullName");

                    b.Property<string>("Message");

                    b.Property<int>("MessageCount");

                    b.Property<string>("PhoneNumber");

                    b.Property<DateTime>("UpdatedAt");

                    b.HasKey("Id");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("ProjectBSIS401.WEB.Infrastructures.Domain.Models.FeedBack", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment")
                        .HasMaxLength(500);

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("Email")
                        .HasMaxLength(255);

                    b.Property<string>("FullName")
                        .HasMaxLength(100);

                    b.Property<int>("Rating");

                    b.Property<Guid?>("ShopId");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<Guid?>("UserId");

                    b.HasKey("Id");

                    b.ToTable("FeedBacks");
                });

            modelBuilder.Entity("ProjectBSIS401.WEB.Infrastructures.Domain.Models.Group", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<int>("Status");

                    b.Property<DateTime>("UpdatedAt");

                    b.HasKey("Id");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("ProjectBSIS401.WEB.Infrastructures.Domain.Models.Like", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<Guid?>("ShopId")
                        .IsRequired();

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<Guid?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("ShopId");

                    b.HasIndex("UserId");

                    b.ToTable("Like");
                });

            modelBuilder.Entity("ProjectBSIS401.WEB.Infrastructures.Domain.Models.Message", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("ChatId");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<int>("MessageCount");

                    b.Property<string>("Name");

                    b.Property<Guid?>("ShopId");

                    b.Property<string>("Text");

                    b.Property<DateTime>("Timestamp");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<Guid?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("ChatId");

                    b.HasIndex("ShopId");

                    b.ToTable("Message");
                });

            modelBuilder.Entity("ProjectBSIS401.WEB.Infrastructures.Domain.Models.Pricing", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<int>("Month");

                    b.Property<decimal>("Price");

                    b.Property<string>("Title");

                    b.Property<DateTime>("UpdatedAt");

                    b.HasKey("Id");

                    b.ToTable("Pricings");
                });

            modelBuilder.Entity("ProjectBSIS401.WEB.Infrastructures.Domain.Models.PricingContent", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Content");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<Guid?>("PricingId");

                    b.Property<DateTime>("UpdatedAt");

                    b.HasKey("Id");

                    b.HasIndex("PricingId");

                    b.ToTable("PricingContents");
                });

            modelBuilder.Entity("ProjectBSIS401.WEB.Infrastructures.Domain.Models.Rating", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<bool>("IsCounted");

                    b.Property<bool>("MaskUser");

                    b.Property<decimal>("Score");

                    b.Property<Guid?>("ShopId")
                        .IsRequired();

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<Guid?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("ShopId");

                    b.HasIndex("UserId");

                    b.ToTable("Rating");
                });

            modelBuilder.Entity("ProjectBSIS401.WEB.Infrastructures.Domain.Models.Service", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("Description");

                    b.Property<bool>("IsPublished");

                    b.Property<string>("Name");

                    b.Property<int>("ServiceType");

                    b.Property<Guid?>("ShopServiceId");

                    b.Property<DateTime>("UpdatedAt");

                    b.HasKey("Id");

                    b.HasIndex("ShopServiceId");

                    b.ToTable("Service");
                });

            modelBuilder.Entity("ProjectBSIS401.WEB.Infrastructures.Domain.Models.Shop", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("BookingsId");

                    b.Property<string>("BusinessContact");

                    b.Property<string>("BusinessDescription");

                    b.Property<string>("BusinessEmailAddress");

                    b.Property<string>("BusinessLocation");

                    b.Property<string>("BusinessName");

                    b.Property<int>("BusinessType");

                    b.Property<string>("CloseAt");

                    b.Property<int>("Comments");

                    b.Property<bool>("CommentsEnabled");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<bool>("IsPublished");

                    b.Property<string>("Layout")
                        .HasMaxLength(75);

                    b.Property<int>("Likes");

                    b.Property<bool>("LikesEnabled");

                    b.Property<string>("OpenAt");

                    b.Property<string>("OwnerShop");

                    b.Property<decimal>("Rating");

                    b.Property<bool>("RatingsEnabled");

                    b.Property<Guid?>("ShopServicesId");

                    b.Property<int>("Status");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<Guid?>("UserId");

                    b.Property<int>("Views");

                    b.HasKey("Id");

                    b.HasIndex("BookingsId");

                    b.HasIndex("ShopServicesId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Shop");
                });

            modelBuilder.Entity("ProjectBSIS401.WEB.Infrastructures.Domain.Models.ShopService", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("Description");

                    b.Property<decimal>("Price");

                    b.Property<string>("Service");

                    b.Property<Guid?>("ServiceId");

                    b.Property<Guid?>("ShopId");

                    b.Property<DateTime>("UpdatedAt");

                    b.HasKey("Id");

                    b.ToTable("ShopServices");
                });

            modelBuilder.Entity("ProjectBSIS401.WEB.Infrastructures.Domain.Models.User", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("ChatId");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<DateTime>("DateOfBirth");

                    b.Property<string>("EmailAddress");

                    b.Property<string>("FirstName");

                    b.Property<int>("Gender");

                    b.Property<string>("LastName");

                    b.Property<int>("LoginRetries");

                    b.Property<int>("LoginStatus");

                    b.Property<string>("Password");

                    b.Property<string>("PhoneNumber");

                    b.Property<string>("RegistrationCode");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.HasIndex("ChatId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("ProjectBSIS401.WEB.Infrastructures.Domain.Models.UserGroup", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<Guid?>("GroupId");

                    b.Property<bool>("IsAdmin");

                    b.Property<bool>("UpdateLocation");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<string>("UserAlias");

                    b.Property<Guid?>("UserId");

                    b.HasKey("Id");

                    b.ToTable("UserGroup");
                });

            modelBuilder.Entity("ProjectBSIS401.WEB.Infrastructures.Domain.Models.UserRole", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<int>("Role");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.ToTable("UserRole");
                });

            modelBuilder.Entity("ProjectBSIS401.WEB.Infrastructures.Domain.Models.Booking", b =>
                {
                    b.HasOne("ProjectBSIS401.WEB.Infrastructures.Domain.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("ProjectBSIS401.WEB.Infrastructures.Domain.Models.ChatUser", b =>
                {
                    b.HasOne("ProjectBSIS401.WEB.Infrastructures.Domain.Models.Chat", "Chat")
                        .WithMany("Users")
                        .HasForeignKey("ChatId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProjectBSIS401.WEB.Infrastructures.Domain.Models.User", "User")
                        .WithMany("ChatUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProjectBSIS401.WEB.Infrastructures.Domain.Models.Comment", b =>
                {
                    b.HasOne("ProjectBSIS401.WEB.Infrastructures.Domain.Models.Shop", "Shop")
                        .WithMany()
                        .HasForeignKey("ShopId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProjectBSIS401.WEB.Infrastructures.Domain.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("ProjectBSIS401.WEB.Infrastructures.Domain.Models.Like", b =>
                {
                    b.HasOne("ProjectBSIS401.WEB.Infrastructures.Domain.Models.Shop", "Shop")
                        .WithMany()
                        .HasForeignKey("ShopId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProjectBSIS401.WEB.Infrastructures.Domain.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("ProjectBSIS401.WEB.Infrastructures.Domain.Models.Message", b =>
                {
                    b.HasOne("ProjectBSIS401.WEB.Infrastructures.Domain.Models.Chat", "Chat")
                        .WithMany("Messages")
                        .HasForeignKey("ChatId");

                    b.HasOne("ProjectBSIS401.WEB.Infrastructures.Domain.Models.Shop")
                        .WithMany("Messages")
                        .HasForeignKey("ShopId");
                });

            modelBuilder.Entity("ProjectBSIS401.WEB.Infrastructures.Domain.Models.PricingContent", b =>
                {
                    b.HasOne("ProjectBSIS401.WEB.Infrastructures.Domain.Models.Pricing", "Pricing")
                        .WithMany("PricingContents")
                        .HasForeignKey("PricingId");
                });

            modelBuilder.Entity("ProjectBSIS401.WEB.Infrastructures.Domain.Models.Rating", b =>
                {
                    b.HasOne("ProjectBSIS401.WEB.Infrastructures.Domain.Models.Shop", "Shop")
                        .WithMany()
                        .HasForeignKey("ShopId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProjectBSIS401.WEB.Infrastructures.Domain.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("ProjectBSIS401.WEB.Infrastructures.Domain.Models.Service", b =>
                {
                    b.HasOne("ProjectBSIS401.WEB.Infrastructures.Domain.Models.ShopService")
                        .WithMany("Services")
                        .HasForeignKey("ShopServiceId");
                });

            modelBuilder.Entity("ProjectBSIS401.WEB.Infrastructures.Domain.Models.Shop", b =>
                {
                    b.HasOne("ProjectBSIS401.WEB.Infrastructures.Domain.Models.Booking", "Bookings")
                        .WithMany("Shop")
                        .HasForeignKey("BookingsId");

                    b.HasOne("ProjectBSIS401.WEB.Infrastructures.Domain.Models.ShopService", "ShopServices")
                        .WithMany("Shops")
                        .HasForeignKey("ShopServicesId");

                    b.HasOne("ProjectBSIS401.WEB.Infrastructures.Domain.Models.User", "Users")
                        .WithOne("Shops")
                        .HasForeignKey("ProjectBSIS401.WEB.Infrastructures.Domain.Models.Shop", "UserId");
                });

            modelBuilder.Entity("ProjectBSIS401.WEB.Infrastructures.Domain.Models.User", b =>
                {
                    b.HasOne("ProjectBSIS401.WEB.Infrastructures.Domain.Models.Chat")
                        .WithMany("User")
                        .HasForeignKey("ChatId");
                });
#pragma warning restore 612, 618
        }
    }
}
