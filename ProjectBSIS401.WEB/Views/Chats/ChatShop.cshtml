@model ProjectBSIS401.WEB.ViewModels.chat.ChatsViewModel
@{
    ViewData["Title"] = "ChatShop";
}

<h2>ChatShop</h2>

<br /><br />
<link href="~/style/chat.css" rel="stylesheet">
<div class="container">
    <h3 class=" text-center">Messaging</h3>
    <div class="messaging">
        <div class="inbox_msg">
            <div class="inbox_people">
                <div class="headind_srch">
                    <div class="recent_heading">
                        <h4>Recent</h4>
                    </div>
                    <div class="srch_bar">
                        <div class="stylish-input-group">
                            <input type="text" class="search-bar" placeholder="Search">
                            <span class="input-group-addon">
                                <button type="button"> <i class="fa fa-search" aria-hidden="true"></i> </button>
                            </span>
                        </div>
                    </div>
                </div>  <button class="btn-primary" id="refrestBtn"><i class="fas fa-redo-alt"></i></button>
                @if (Model.Chat.Messages != null)
                {
                    if (Model.Chat.Messages.Count > 0)
                    {

                        <div class="inbox_chat" id="historyChat">
                            @foreach (var message in Model.Chat.Messages)
                            {
                                <div class="chat_list active_chat">
                                    <div class="chat_people">
                                        <div class="chat_img"> <img src="~/userprofile/users/@message.UserId/thumbnail.png" alt="@message.Name"> </div>
                                        <div class="chat_ib">
                                            <h5>@message.Name <span class="chat_date">@message.Timestamp</span></h5>
                                            <p>
                                                @message.Text
                                            </p>
                                        </div>
                                    </div>
                                </div>
                            }

                         
                        </div>
                    }

                }
                <!--Recent-->
                <!--End Recent-->
            </div>
            <div class="mesgs">
                <div class="msg_history">
                    <div class="incoming_msg"  >
                        <div class="incoming_msg_img"> <img src="https://ptetutorials.com/images/user-profile.png" alt="sunil"> </div>
                        <label id="userName"></label>
                        <div class="received_msg" id="messagesList">
                            <p>hi</p>
                        </div>
                    </div>

                    <div class="outgoing_msg">
                        <div class="sent_msg" id="messagesListTwo">
                            <p>
                                hello
                            </p>
                            <span class="time_date"> 11:01 AM    |    June 9</span>
                        </div>

                    </div>
                   
                <div class="type_msg">
                    
                    <div class="input_msg_write">
                        <label class="form-label" id="userName">@Model.Chat.Name</label>
                        <br />
                        <input type="hidden" id="userInput" value="@Model.Chat.Name" />
                        <input type="hidden" id="userId" value="@WebIDS.UserId" />
                        <input type="hidden" id="chatId" value="@Model.Chat.Id" />
                        <input type="hidden" id="timestamp" value="@DateTime.UtcNow" />
                        <label class="form-label">Message</label>
                        <input type="text" id="messageInput" />
                        <button class="msg_send_btn" id="sendButton" type="button"><i class="fa fa-paper-plane" aria-hidden="true"></i></button>
                    </div>
                </div>
            </div>
        </div>



    </div>
</div>


<script src="~/lib/signalr/dist/browser/signalr.js"></script>

<script>
    "use strict";

    var connection = new signalR.HubConnectionBuilder().withUrl("/signalHub").build();

    //Disable send button until connection is established
    document.getElementById("sendButton").disabled = true;
    var u1 = "user1"
    var u2 = document.getElementById("userInput").value;
    connection.on("ReceiveMessage", function (user, message) {
        if (user == u1) {
            var msg = message.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
            var encodedMsg = msg;
            var p = document.createElement("p");
            p.textContent = encodedMsg;
            document.getElementById("messagesList").appendChild(p);
            
        }
        if (user == u2) {
            var msg = message.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
            var encodedMsg = msg;
            var p = document.createElement("p");
            p.textContent = encodedMsg;
            document.getElementById("messagesListTwo").appendChild(p);
        }
      
       
    });


    connection.on("RecieveChatMessage", function (RoomId, UserId, Message, Name, Timestamp) {
        console.log(RoomId, UserId, Message, Name, Timestamp);

        var msg = Message.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
        var encodedMsg = msg;
        var p = document.createElement("p");
        p.textContent = encodedMsg;
        document.getElementById("messagesListTwo").appendChild(p);

        var chatlist = document.createElement("div");
        chatlist.classList('chat_list active_chat');

        var chatPeople = document.createElement("div");
        chatPeople.classList('chat_people');

        var chatImg = document.createElement("div");
        chatImg.classList('chat_img');

        var Img = document.createElement("img");
        Img.src('~/userprofile/users/' + UserId + '/thumbnail.png');

        var chatIb = document.createElement("div");
        chatIb.classList('chat_ib');

        var headerF = document.createElement("h5");
        headerF.appendChild(document.createTextNode(Name));

        var chatDate = document.createElement("span");
        chatDate.classList('chat_date');
        chatDate.appendChild(document.createTextNode(Timestamp));

        var p = document.createElement("p");
        p.appendChild(document.createTextNode(Message));



        chatlist.appendChild(chatPeople);
        chatlist.appendChild(chatImg);
        chatlist.appendChild(Img);
        chatlist.appendChild(chatIb);
        chatlist.appendChild(headerF);
        chatlist.appendChild(chatDate);
        chatlist.appendChild(p);

        document.querySelector('inbox_chat').append(chatlist);

    });


    connection.start().then(function () {
        document.getElementById("sendButton").disabled = false;
    }).catch(function (err) {
        return console.error(err.toString());
    });

    document.getElementById("sendButton").addEventListener("click", function (event) {
        var user = document.getElementById("userInput").value;
        var message = document.getElementById("messageInput").value;
        var userID = document.getElementById("userId").value;
        var roomID = document.getElementById("chatId").value;
        var timestamp = document.getElementById("timestamp").value;

        var obj = {
            Name: user,
            ChatId: roomID,
            UserId: userID,
            Message: message,
        }
        SendValueToCreateMessage(obj);

        connection.invoke("ChatTo", roomID, userID, message, user, timestamp).catch(function (err) {
            return console.error(err.toString());
        });
        connection.invoke("SendMessageTo", user, message).catch(function (err) {
            return console.error(err.toString());
        });
        event.preventDefault();
    });

    
    function SendValueToCreateMessage(obj) {
        var route = "/chats/messages";
        $.ajax({
            url: route,
            method: "POST",
            data: obj,
            success: function (data) {
                
            },
            error: function (err) {
                $("#ErrorList").html(err);
            }
        });
    }
</script>